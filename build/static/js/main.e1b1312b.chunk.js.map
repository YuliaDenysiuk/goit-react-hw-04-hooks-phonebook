{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","className","s","form","form__label","type","form__input","pattern","title","required","onChange","form__button","Component","ContactList","contacts","onDeleteContact","map","id","contacts__item","contacts__button","onClick","Filter","onFilterChange","filter","filter__input","App","handleFormSubmit","contact","uuidv4","find","el","alert","handleFilterChange","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1b1312b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2mrVt\",\"filter__input\":\"Filter_filter__input__2mG6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__oLDjt\",\"form__input\":\"ContactForm_form__input__280_T\",\"form__label\":\"ContactForm_form__label__3KWY9\",\"form__button\":\"ContactForm_form__button__21N7C\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleChange, handleSubmit } = this;\n\n    return (\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.form__label}>\n          Name\n          <input\n            type=\"text\"\n            className={s.form__input}\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.form__label}>\n          Number\n          <input\n            type=\"tel\"\n            className={s.form__input}\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.form__button}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  target: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.contacts}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contacts__item}>\n          {name}: {number}\n          <button type=\"button\" className={s.contacts__button} onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onFilterChange }) {\n  return (\n    <>\n      <p className={s.filter}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        className={s.filter__input}\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={onFilterChange}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import './App.css';\nimport { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts))\n    }   \n  }\n\n  handleFormSubmit = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.find(el => el.name === contact.name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  handleFilterChange = ({ target }) => {\n    const { value } = target;\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = id => {\n     this.setState(({contacts}) => ({\n      contacts: contacts.filter(contact => contact.id !== id)\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const { handleFormSubmit, handleFilterChange, getFilteredContacts, deleteContact } =\n      this;\n    const filteredContacts = getFilteredContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={handleFormSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilterChange={handleFilterChange} />\n        <ContactList contacts={filteredContacts} onDeleteContact={deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2yNK6\",\"contacts__item\":\"ContactList_contacts__item__t8kwm\",\"contacts__button\":\"ContactList_contacts__button__ykbEE\"};"],"sourceRoot":""}